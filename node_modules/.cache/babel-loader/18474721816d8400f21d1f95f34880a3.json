{"ast":null,"code":"import _toConsumableArray from\"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{FETCH_ALL,CREATE,UPDATE,DELETE,VOTE}from'../constants/actionTypes';export default(function(){var petitions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL:return action.payload;case VOTE:return petitions.map(function(petition){return petition._id===action.payload._id?action.payload:petition;});case CREATE:return[].concat(_toConsumableArray(petitions),[action.payload]);case UPDATE:return petitions.map(function(petition){return petition._id===action.payload._id?action.payload:petition;});case DELETE:return petitions.filter(function(petition){return petition._id!==action.payload;});default:return petitions;}});","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/reducers/petitions.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","VOTE","petitions","action","type","payload","map","petition","_id","filter"],"mappings":"+LAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,eAAe,UAA4B,IAA3BC,CAAAA,SAA2B,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACzC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKP,CAAAA,SAAL,CACE,MAAOM,CAAAA,MAAM,CAACE,OAAd,CACF,IAAKJ,CAAAA,IAAL,CACE,MAAOC,CAAAA,SAAS,CAACI,GAAV,CAAc,SAACC,QAAD,QACnBA,CAAAA,QAAQ,CAACC,GAAT,GAAiBL,MAAM,CAACE,OAAP,CAAeG,GAAhC,CAAsCL,MAAM,CAACE,OAA7C,CAAuDE,QADpC,EAAd,CAAP,CAGF,IAAKT,CAAAA,MAAL,CACE,mCAAWI,SAAX,GAAsBC,MAAM,CAACE,OAA7B,GACF,IAAKN,CAAAA,MAAL,CACE,MAAOG,CAAAA,SAAS,CAACI,GAAV,CAAc,SAACC,QAAD,QACnBA,CAAAA,QAAQ,CAACC,GAAT,GAAiBL,MAAM,CAACE,OAAP,CAAeG,GAAhC,CAAsCL,MAAM,CAACE,OAA7C,CAAuDE,QADpC,EAAd,CAAP,CAGF,IAAKP,CAAAA,MAAL,CACE,MAAOE,CAAAA,SAAS,CAACO,MAAV,CAAiB,SAACF,QAAD,QAAcA,CAAAA,QAAQ,CAACC,GAAT,GAAiBL,MAAM,CAACE,OAAtC,EAAjB,CAAP,CACF,QACE,MAAOH,CAAAA,SAAP,CAhBJ,CAkBD,CAnBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, VOTE } from '../constants/actionTypes';\n\nexport default (petitions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case VOTE:\n      return petitions.map((petition) =>\n        petition._id === action.payload._id ? action.payload : petition\n      );\n    case CREATE:\n      return [...petitions, action.payload];\n    case UPDATE:\n      return petitions.map((petition) =>\n        petition._id === action.payload._id ? action.payload : petition\n      );\n    case DELETE:\n      return petitions.filter((petition) => petition._id !== action.payload);\n    default:\n      return petitions;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}