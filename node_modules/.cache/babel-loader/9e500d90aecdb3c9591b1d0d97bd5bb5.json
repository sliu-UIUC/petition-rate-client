{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, VOTE } from '../constants/actionTypes';\nexport default ((petitions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case VOTE:\n      return petitions.map(petition => petition._id === action.payload._id ? action.payload : petition);\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/reducers/petitions.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","VOTE","petitions","action","type","payload","map","petition","_id","posts","post","filter"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAwD,0BAAxD;AAEA,gBAAe,CAACC,SAAS,GAAG,EAAb,EAAiBC,MAAjB,KAA4B;AACzC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AACF,SAAKJ,IAAL;AACE,aAAOC,SAAS,CAACI,GAAV,CAAeC,QAAD,IACnBA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAAP,CAAeG,GAAhC,GAAsCL,MAAM,CAACE,OAA7C,GAAuDE,QADlD,CAAP;;AAGF,SAAKT,MAAL;AACE,aAAO,CAAC,GAAGW,KAAJ,EAAWN,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,MAAL;AACE,aAAOU,KAAK,CAACH,GAAN,CAAWI,IAAD,IACfA,IAAI,CAACF,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDK,IAD9C,CAAP;;AAGF,SAAKV,MAAL;AACE,aAAOS,KAAK,CAACE,MAAN,CAAcD,IAAD,IAAUA,IAAI,CAACF,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOI,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, VOTE } from '../constants/actionTypes';\n\nexport default (petitions = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case VOTE:\n      return petitions.map((petition) =>\n        petition._id === action.payload._id ? action.payload : petition\n      );\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}