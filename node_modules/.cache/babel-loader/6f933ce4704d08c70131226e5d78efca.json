{"ast":null,"code":"var _jsxFileName = \"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { createPetition, updatePetition } from \"../../actions/petitions\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [petitionData, setPetitionData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const petition = useSelector(state => currentId ? state.petitions.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  async function verifyAndSetUser() {\n    try {\n      const res = await fetch(\"http://localhost:5000/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const data = await res.json();\n      setPetitionData({ ...postData,\n        creator: data.username\n      });\n    } catch (err) {\n      console.log(\"Error in verifying user\");\n    }\n  }\n\n  useEffect(() => {\n    if (post) setPostData(post);\n    verifyAndSetUser();\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPetition(postData));\n      clear();\n    } else {\n      dispatch(updatePetition(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : \"Creating a Petition\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(\",\")\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPetition","updatePetition","Form","currentId","setCurrentId","petitionData","setPetitionData","creator","title","message","tags","selectedFile","petition","state","petitions","find","_id","dispatch","classes","verifyAndSetUser","res","fetch","headers","localStorage","getItem","data","json","postData","username","err","console","log","post","setPostData","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\n\nimport useStyles from \"./styles\";\nimport { createPetition, updatePetition } from \"../../actions/petitions\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [petitionData, setPetitionData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const petition = useSelector((state) =>\n    currentId ? state.petitions.find((message) => message._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  async function verifyAndSetUser() {\n    try {\n      const res = await fetch(\"http://localhost:5000/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      });\n\n      const data = await res.json();\n      setPetitionData({ ...postData, creator: data.username });\n    } catch (err) {\n      console.log(\"Error in verifying user\");\n    }\n  }\n\n  useEffect(() => {\n    if (post) setPostData(post);\n    verifyAndSetUser();\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPetition(postData));\n      clear();\n    } else {\n      dispatch(updatePetition(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Petition\"}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          rows={4}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags (coma separated)\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPostData({ ...postData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}