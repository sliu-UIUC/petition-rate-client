{"ast":null,"code":"import _regeneratorRuntime from\"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{FETCH_ALL,CREATE,UPDATE,DELETE,VOTE}from'../constants/actionTypes';import*as api from'../api/index.js';export var getPetitions=function getPetitions(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$api$fetchPetit,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api.fetchPetitions();case 3:_yield$api$fetchPetit=_context.sent;data=_yield$api$fetchPetit.data;dispatch({type:FETCH_ALL,payload:data});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0.message);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createPetition=function createPetition(petition){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$api$createPeti,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return api.createPetition(petition);case 3:_yield$api$createPeti=_context2.sent;data=_yield$api$createPeti.data;dispatch({type:CREATE,payload:data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var updatePetition=function updatePetition(id,petition){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var _yield$api$updatePeti,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return api.updatePetition(id,petition);case 3:_yield$api$updatePeti=_context3.sent;data=_yield$api$updatePeti.data;dispatch({type:UPDATE,payload:data});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0.message);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var votePetition=function votePetition(id,userid){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var _yield$api$votePetiti,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return api.votePetition(id,userid);case 3:_yield$api$votePetiti=_context4.sent;data=_yield$api$votePetiti.data;dispatch({type:VOTE,payload:data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0.message);case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var deletePetition=function deletePetition(id){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return api.deletePetition(id);case 3:dispatch({type:DELETE,payload:id});_context5.next=9;break;case 6:_context5.prev=6;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0.message);case 9:case\"end\":return _context5.stop();}}},_callee5,null,[[0,6]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/actions/petitions.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","VOTE","api","getPetitions","dispatch","fetchPetitions","data","type","payload","console","log","message","createPetition","petition","updatePetition","id","votePetition","userid","deletePetition"],"mappings":"2WAAA,OAASA,SAAT,CAAoBC,MAApB,CAA4BC,MAA5B,CAAoCC,MAApC,CAA4CC,IAA5C,KAAwD,0BAAxD,CAEA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,iBAArB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,kGAAM,iBAAOC,QAAP,uLAEPF,CAAAA,GAAG,CAACG,cAAJ,EAFO,4CAEtBC,IAFsB,uBAEtBA,IAFsB,CAI9BF,QAAQ,CAAC,CAAEG,IAAI,CAAEV,SAAR,CAAmBW,OAAO,CAAEF,IAA5B,CAAD,CAAR,CAJ8B,+EAM9BG,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB,EAN8B,oEAAN,gEAArB,CAUP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,kGAAc,kBAAOT,QAAP,6LAEjBF,CAAAA,GAAG,CAACU,cAAJ,CAAmBC,QAAnB,CAFiB,6CAEhCP,IAFgC,uBAEhCA,IAFgC,CAIxCF,QAAQ,CAAC,CAAEG,IAAI,CAAET,MAAR,CAAgBU,OAAO,CAAEF,IAAzB,CAAD,CAAR,CAJwC,mFAMxCG,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EANwC,sEAAd,kEAAvB,CAUP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,EAAD,CAAKF,QAAL,kGAAkB,kBAAOT,QAAP,6LAErBF,CAAAA,GAAG,CAACY,cAAJ,CAAmBC,EAAnB,CAAuBF,QAAvB,CAFqB,6CAEpCP,IAFoC,uBAEpCA,IAFoC,CAI5CF,QAAQ,CAAC,CAAEG,IAAI,CAAER,MAAR,CAAgBS,OAAO,CAAEF,IAAzB,CAAD,CAAR,CAJ4C,mFAM5CG,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EAN4C,sEAAlB,kEAAvB,CAUP,MAAO,IAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,EAAD,CAAKE,MAAL,kGAAgB,kBAAOb,QAAP,6LAGjBF,CAAAA,GAAG,CAACc,YAAJ,CAAiBD,EAAjB,CAAqBE,MAArB,CAHiB,6CAGhCX,IAHgC,uBAGhCA,IAHgC,CAKxCF,QAAQ,CAAC,CAAEG,IAAI,CAAEN,IAAR,CAAcO,OAAO,CAAEF,IAAvB,CAAD,CAAR,CALwC,mFAOxCG,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EAPwC,sEAAhB,kEAArB,CAWP,MAAO,IAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,EAAD,kGAAQ,kBAAOX,QAAP,8JAE5BF,CAAAA,GAAG,CAACgB,cAAJ,CAAmBH,EAAnB,CAF4B,QAIlCX,QAAQ,CAAC,CAAEG,IAAI,CAAEP,MAAR,CAAgBQ,OAAO,CAAEO,EAAzB,CAAD,CAAR,CAJkC,kFAMlCN,OAAO,CAACC,GAAR,CAAY,aAAMC,OAAlB,EANkC,qEAAR,kEAAvB","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, VOTE } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPetitions = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPetitions();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPetition = (petition) => async (dispatch) => {\n  try {\n    const { data } = await api.createPetition(petition);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePetition = (id, petition) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePetition(id, petition);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const votePetition = (id, userid) => async (dispatch) => {\n  try {\n    \n    const { data } = await api.votePetition(id, userid);\n\n    dispatch({ type: VOTE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePetition = (id) => async (dispatch) => {\n  try {\n    await api.deletePetition(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}