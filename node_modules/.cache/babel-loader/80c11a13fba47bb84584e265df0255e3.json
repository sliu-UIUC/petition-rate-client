{"ast":null,"code":"var _jsxFileName = \"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\nimport useStyles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { createPetition, updatePetition } from \"../../actions/petitions\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const history = useHistory();\n  const [petitionData, setPetitionData] = useState({\n    creator: \"\",\n    title: \"\",\n    description: \"\",\n    selectedFile: \"\"\n  });\n  const petition = useSelector(state => currentId ? state.petitions.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  async function verifyAndSetUser() {\n    try {\n      const res = await fetch(\"http://localhost:5000/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        }\n      });\n      const data = await res.json();\n      setPetitionData({ ...petitionData,\n        creator: data.username\n      });\n    } catch (err) {\n      console.log(\"Error in verifying user\");\n    }\n  }\n\n  useEffect(() => {\n    if (petition) setPetitionData(petition);\n    verifyAndSetUser();\n  }, [petition]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPetitionData({\n      creator: \"\",\n      title: \"\",\n      description: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPetition(petitionData));\n      clear();\n    } else {\n      dispatch(updatePetition(currentId, petitionData));\n      clear();\n    } // history.push(\"/\");\n\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${petition.title}\"` : \"Creating a Petition\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title (Required)\",\n    fullWidth: true,\n    value: petitionData.title,\n    required: true,\n    onChange: e => setPetitionData({ ...petitionData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: petitionData.description,\n    onChange: e => setPetitionData({ ...petitionData,\n      description: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPetitionData({ ...petitionData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Create!\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","useHistory","createPetition","updatePetition","Form","currentId","setCurrentId","history","petitionData","setPetitionData","creator","title","description","selectedFile","petition","state","petitions","find","message","_id","dispatch","classes","verifyAndSetUser","res","fetch","headers","localStorage","getItem","data","json","username","err","console","log","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FileBase from \"react-file-base64\";\n\nimport useStyles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { createPetition, updatePetition } from \"../../actions/petitions\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const history = useHistory();\n\n  const [petitionData, setPetitionData] = useState({\n    creator: \"\",\n    title: \"\",\n    description: \"\",\n    selectedFile: \"\",\n  });\n  const petition = useSelector((state) =>\n    currentId\n      ? state.petitions.find((message) => message._id === currentId)\n      : null\n  );\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  async function verifyAndSetUser() {\n    try {\n      const res = await fetch(\"http://localhost:5000/isUserAuth\", {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n      });\n\n      const data = await res.json();\n      setPetitionData({ ...petitionData, creator: data.username });\n    } catch (err) {\n      console.log(\"Error in verifying user\");\n    }\n  }\n\n  useEffect(() => {\n    if (petition) setPetitionData(petition);\n    verifyAndSetUser();\n  }, [petition]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPetitionData({\n      creator: \"\",\n      title: \"\",\n      description: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPetition(petitionData));\n      clear();\n    } else {\n      dispatch(updatePetition(currentId, petitionData));\n      clear();\n    }\n    // history.push(\"/\");\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${petition.title}\"` : \"Creating a Petition\"}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title (Required)\"\n          fullWidth\n          value={petitionData.title}\n          required={true}\n          onChange={(e) =>\n            setPetitionData({ ...petitionData, title: e.target.value })\n          }\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Description\"\n          fullWidth\n          multiline\n          rows={4}\n          value={petitionData.description}\n          onChange={(e) =>\n            setPetitionData({ ...petitionData, description: e.target.value })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase\n            type=\"file\"\n            multiple={false}\n            onDone={({ base64 }) =>\n              setPetitionData({ ...petitionData, selectedFile: base64 })\n            }\n          />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Create!\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}