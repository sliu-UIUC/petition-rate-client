{"ast":null,"code":"import React from\"react\";import{Grid,CircularProgress}from\"@material-ui/core\";import{useSelector}from\"react-redux\";import Petition from\"./Petition/Petition\";var Petitions=function Petitions(_ref){var setCurrentId=_ref.setCurrentId,query=_ref.query,sortBy=_ref.sortBy,setWidth=_ref.setWidth;var petitions=useSelector(function(state){return state.petitions;});if(sortBy===\"voteCountDesc\"){petitions.sort(function(a,b){return a.voteCount<b.voteCount?1:-1;});}else if(sortBy===\"voteCountAsc\"){petitions.sort(function(a,b){return a.voteCount<b.voteCount?-1:1;});}else if(sortBy===\"creationTimeDesc\"){petitions.sort(function(a,b){return a.createdAt<b.createdAt?1:-1;});}else if(sortBy===\"creationTimeAsc\"){petitions.sort(function(a,b){return a.createdAt<b.createdAt?-1:1;});}return/*#__PURE__*/React.createElement(Grid,{justifyContent:\"center\",spacing:5},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:4},petitions.map(function(petition){return petition.title.startsWith(query)?/*#__PURE__*/React.createElement(Grid,{key:petition._id,item:true,xs:setWidth},/*#__PURE__*/React.createElement(Petition,{petition:petition,setCurrentId:setCurrentId})):null;}))));};export default Petitions;","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Petitions/Petitions.js"],"names":["React","Grid","CircularProgress","useSelector","Petition","Petitions","setCurrentId","query","sortBy","setWidth","petitions","state","sort","a","b","voteCount","createdAt","map","petition","title","startsWith","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,gBAAf,KAAuC,mBAAvC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA+C,IAA5CC,CAAAA,YAA4C,MAA5CA,YAA4C,CAA9BC,KAA8B,MAA9BA,KAA8B,CAAvBC,MAAuB,MAAvBA,MAAuB,CAAfC,QAAe,MAAfA,QAAe,CAC/D,GAAMC,CAAAA,SAAS,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAK,CAACD,SAAjB,EAAD,CAA7B,CAEA,GAAIF,MAAM,GAAK,eAAf,CAAgC,CAC9BE,SAAS,CAACE,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAAhB,CAA4B,CAA5B,CAAgC,CAAC,CAA5C,EAAf,EACD,CAFD,IAEO,IAAIP,MAAM,GAAK,cAAf,CAA+B,CACpCE,SAAS,CAACE,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAAhB,CAA4B,CAAC,CAA7B,CAAiC,CAA5C,EAAf,EACD,CAFM,IAEA,IAAIP,MAAM,GAAK,kBAAf,CAAmC,CACxCE,SAAS,CAACE,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACG,SAAF,CAAcF,CAAC,CAACE,SAAhB,CAA4B,CAA5B,CAAgC,CAAC,CAA5C,EAAf,EACD,CAFM,IAEA,IAAIR,MAAM,GAAK,iBAAf,CAAkC,CACvCE,SAAS,CAACE,IAAV,CAAe,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACG,SAAF,CAAcF,CAAC,CAACE,SAAhB,CAA4B,CAAC,CAA7B,CAAiC,CAA5C,EAAf,EACD,CAED,mBACE,oBAAC,IAAD,EAAM,cAAc,CAAC,QAArB,CAA8B,OAAO,CAAE,CAAvC,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,EACGN,SAAS,CAACO,GAAV,CAAc,SAACC,QAAD,QACbA,CAAAA,QAAQ,CAACC,KAAT,CAAeC,UAAf,CAA0Bb,KAA1B,eACE,oBAAC,IAAD,EAAM,GAAG,CAAEW,QAAQ,CAACG,GAApB,CAAyB,IAAI,KAA7B,CAA8B,EAAE,CAAEZ,QAAlC,eACE,oBAAC,QAAD,EAAU,QAAQ,CAAES,QAApB,CAA8B,YAAY,CAAEZ,YAA5C,EADF,CADF,CAII,IALS,EAAd,CADH,CADF,CADF,CADF,CAeD,CA5BD,CA8BA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport Petition from \"./Petition/Petition\";\n\nconst Petitions = ({ setCurrentId, query, sortBy, setWidth }) => {\n  const petitions = useSelector((state) => state.petitions);\n\n  if (sortBy === \"voteCountDesc\") {\n    petitions.sort((a, b) => (a.voteCount < b.voteCount ? 1 : -1));\n  } else if (sortBy === \"voteCountAsc\") {\n    petitions.sort((a, b) => (a.voteCount < b.voteCount ? -1 : 1));\n  } else if (sortBy === \"creationTimeDesc\") {\n    petitions.sort((a, b) => (a.createdAt < b.createdAt ? 1 : -1));\n  } else if (sortBy === \"creationTimeAsc\") {\n    petitions.sort((a, b) => (a.createdAt < b.createdAt ? -1 : 1));\n  }\n\n  return (\n    <Grid justifyContent=\"center\" spacing={5}>\n      <Grid item>\n        <Grid container spacing={4}>\n          {petitions.map((petition) =>\n            petition.title.startsWith(query) ? (\n              <Grid key={petition._id} item xs={setWidth}>\n                <Petition petition={petition} setCurrentId={setCurrentId} />\n              </Grid>\n            ) : null\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Petitions;\n"]},"metadata":{},"sourceType":"module"}