{"ast":null,"code":"var _jsxFileName = \"/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Posts/Posts.js\";\nimport React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\n\nconst Posts = ({\n  setCurrentId,\n  query,\n  sortBy,\n  setWidth\n}) => {\n  let posts = useSelector(state => state.posts);\n\n  if (sortBy === 'likeCount') {} else if (sortBy === \"creationTimeDesc\") return !posts.length ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    justifyContent: \"center\",\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, posts.map(post => post.title.startsWith(query) ? /*#__PURE__*/React.createElement(Grid, {\n    key: post._id,\n    item: true,\n    xs: setWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Post, {\n    post: post,\n    setCurrentId: setCurrentId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  })) : null))));\n};\n\nexport default Posts;","map":{"version":3,"sources":["/Users/lebronjames/Desktop/F21 Courses/Web Dev/TeamToffee/client/src/components/Posts/Posts.js"],"names":["React","Grid","CircularProgress","useSelector","Paper","Post","useStyles","Posts","setCurrentId","query","sortBy","setWidth","posts","state","length","map","post","title","startsWith","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,MAAvB;AAA+BC,EAAAA;AAA/B,CAAD,KAA+C;AAC3D,MAAIC,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAvB;;AAEA,MAAGF,MAAM,KAAK,WAAd,EAA2B,CAE1B,CAFD,MAEO,IAAIA,MAAM,KAAK,kBAAf,EACL,OAAO,CAACE,KAAK,CAACE,MAAP,gBACL,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAA8B,IAAA,OAAO,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAWC,IAAD,IACTA,IAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBT,KAAtB,iBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEO,IAAI,CAACG,GAAhB;AAAqB,IAAA,IAAI,MAAzB;AAA0B,IAAA,EAAE,EAAER,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEK,IAAZ;AAAkB,IAAA,YAAY,EAAER,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,GAII,IALL,CADH,CADF,CADF,CAHF;AAyBH,CA/BD;;AAiCA,eAAeD,KAAf","sourcesContent":["import React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Post from \"./Post/Post\";\n\nimport useStyles from \"./styles\";\n\nconst Posts = ({ setCurrentId, query, sortBy, setWidth }) => {\n  let posts = useSelector((state) => state.posts);\n  \n  if(sortBy === 'likeCount') {\n\n  } else if (sortBy === \"creationTimeDesc\")\n    return !posts.length ? (\n      <CircularProgress />\n    ) : (\n      <Grid justifyContent=\"center\" spacing={5}>\n        <Grid item>\n          <Grid container spacing={4}>\n            {posts.map((post) =>\n              post.title.startsWith(query) ? (\n                <Grid key={post._id} item xs={setWidth}>\n                  <Post post={post} setCurrentId={setCurrentId} />\n                </Grid>\n              ) : null\n            )}\n          </Grid>\n        </Grid>\n        {/* <Grid item xs={24}>\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    </Grid> */}\n      </Grid>\n    );\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}